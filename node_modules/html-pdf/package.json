{
  "name": "html-pdf",
  "version": "1.5.0",
  "description": "HTML to PDF converter that uses phantomjs",
  "main": "lib/index.js",
  "directories": {
    "test": "test"
  },
  "bin": {
    "html-pdf": "bin/index.js"
  },
  "scripts": {
    "build": "coffee --compile --output lib/ src/",
    "standard": "standard bin/index.js",
    "exectest": "coffee test/index.coffee -n",
    "test": "npm run standard && npm run build  && npm run exectest"
  },
  "author": {
    "name": "Marc Bachmann"
  },
  "license": "MIT",
  "devDependencies": {
    "coffee-script": "^1.7.1",
    "standard": "^5.1.1",
    "tap-spec": "^2.2.0",
    "tape": "^3.4.0"
  },
  "optionalDependencies": {
    "phantomjs": "^1.9.19"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/marcbachmann/node-html-pdf.git"
  },
  "keywords": [
    "html",
    "pdf",
    "phantom",
    "phantomjs",
    "nodejs"
  ],
  "bugs": {
    "url": "https://github.com/marcbachmann/node-html-pdf/issues"
  },
  "homepage": "https://github.com/marcbachmann/node-html-pdf",
  "readme": "# node-html-pdf\n## HTML to PDF converter that uses phantomjs\n![image](example/businesscard.png)  \n[Example Business Card](example/businesscard.pdf)  \n -> [and its Source file](example/businesscard.html)  \n\n[Example Receipt](http://public.admintools.ch/gh/html-pdf/order.pdf)\n\n## Installation\n\nInstall the html-pdf utility via [npm](http://npmjs.org/):\n\n```\n$ npm install -g html-pdf\n```\n\n## Command-line example\n\n```\n$ html-pdf test/businesscard.html businesscard.pdf\n```\n\n## Code example\n```javascript\nvar fs = require('fs');\nvar pdf = require('html-pdf');\nvar html = fs.readFileSync('./test/businesscard.html', 'utf8');\nvar options = { format: 'Letter' };\n\npdf.create(html, options).toFile('./businesscard.pdf', function(err, res) {\n  if (err) return console.log(err);\n  console.log(res); // { filename: '/app/businesscard.pdf' }\n});\n```\n\n## API\n\n```js\nvar pdf = require('html-pdf');\npdf.create(html).toFile([filepath, ]function(err, res){\n  console.log(res.filename);\n});\n\npdf.create(html).toStream(function(err, stream){\n  stream.pipe(fs.createWriteStream('./foo.pdf'));\n});\n\npdf.create(html).toBuffer(function(err, buffer){\n  console.log('This is a buffer:', Buffer.isBuffer(buffer));\n});\n\n\n// for backwards compatibility\n// alias to pdf.create(html[, options]).toBuffer(callback)\npdf.create(html [, options], function(err, buffer){});\n```\n\n\n## Options\n```javascript\nconfig = {\n\n  // Export options\n  \"directory\": \"/tmp\",       // The directory the file gets written into if not using .toFile(filename, callback). default: '/tmp'\n\n  // Papersize Options: http://phantomjs.org/api/webpage/property/paper-size.html\n  \"height\": \"10.5in\",        // allowed units: mm, cm, in, px\n  \"width\": \"8in\",            // allowed units: mm, cm, in, px\n  - or -\n  \"format\": \"Letter\",        // allowed units: A3, A4, A5, Legal, Letter, Tabloid\n  \"orientation\": \"portrait\", // portrait or landscape\n\n  // Page options\n  \"border\": \"0\",             // default is 0, units: mm, cm, in, px\n  - or -\n  \"border\": {\n    \"top\": \"2in\",            // default is 0, units: mm, cm, in, px\n    \"right\": \"1in\",\n    \"bottom\": \"2in\",\n    \"left\": \"1.5in\"\n  },\n\n  \"header\": {\n    \"height\": \"45mm\",\n    \"contents\": '<div style=\"text-align: center;\">Author: Marc Bachmann</div>'\n  },\n  \"footer\": {\n    \"height\": \"28mm\",\n    \"contents\": '<span style=\"color: #444;\">{{page}}</span>/<span>{{pages}}</span>'\n  },\n\n  // File options\n  \"type\": \"pdf\",             // allowed file types: png, jpeg, pdf\n  \"quality\": \"75\",           // only used for types png & jpeg\n\n  // Script options\n  \"phantomPath\": \"./node_modules/phantomjs/bin/phantomjs\", // PhantomJS binary which should get downloaded automatically\n  \"phantomArgs\": [], // array of strings used as phantomjs args e.g. [\"--ignore-ssl-errors=yes\"]\n  \"script\": '/url',           // Absolute path to a custom phantomjs script, use the file in lib/scripts as example\n  \"timeout\": 30000,           // Timeout that will cancel phantomjs, in milliseconds\n\n  // HTTP Headers that are used for requests\n  \"httpHeaders\": {\n    // e.g.\n    \"Authorization\": \"Bearer ACEFAD8C-4B4D-4042-AB30-6C735F5BAC8B\"\n  }\n\n}\n```\n\nThe full options object gets converted to JSON and will get passed to the phantomjs script as third argument.  \nThere are more options concerning the paperSize, header & footer options inside the phantomjs script.\n",
  "readmeFilename": "README.md",
  "dependencies": {
    "phantomjs": "^1.9.19"
  },
  "_id": "html-pdf@1.5.0",
  "_shasum": "135d54817a98b927ff1eca9f29cfdf0279aa8045",
  "_from": "html-pdf@1.5.0",
  "_resolved": "https://registry.npmjs.org/html-pdf/-/html-pdf-1.5.0.tgz"
}
